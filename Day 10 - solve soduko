class Solution:
    def solveSudoku(self, board: List[List[str]]) -> None:
        """
        Do not return anything, modify board in-place instead.
        """
        n = len(board)
        def isvalid(board , r, c, n):
            for i in range(9):
                if board[r][i]==n or board[i][c]==n or board[3*(r//3)+(i//3)][3*(c//3)+(i%3)]==n:
                    return False
            return True

            
         
        def fun(board):
            for r in range(n):
                for c in range(n):
                    if board[r][c] == ".":
                        for i in range(1, 10):
                            if isvalid(board , r , c , str(i)):
                                board[r][c] = str(i)
                                p = fun(board)
                                if p == True:
                                    return True
                                else:
                                    board[r][c]="."
                        return False
            return True
        
        
        fun(board)
        
        
                    
                                
                                
            
