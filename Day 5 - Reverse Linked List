# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def reverseList(self, head: Optional[ListNode]) -> Optional[ListNode]:
        def fun(head):
            #RECURSIVE
            if head ==None:
                return None
            if head.next == None:
                return head
            
            node = fun(head.next)
            head.next.next = head
            head.next = None
            return node
        
        return fun(head)
        
        #ITERATIVE
        prev = None 
        cur = head
        while cur:
            temp = cur.next
            cur.next = prev
            prev = cur
            cur = temp
            
        return prev
