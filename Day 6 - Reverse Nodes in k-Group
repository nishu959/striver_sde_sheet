# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def reverseKGroup(self, head: Optional[ListNode], k: int) -> Optional[ListNode]:
        if head == None or k==1:
            return head
        dummy = ListNode(0)
        pre = cur = nex = dummy
        
        dummy.next = head
        temp = head
        l = 0
        while temp:
            l += 1
            temp = temp.next
            
        while l >= k:
            cur = pre.next
            nex = cur.next
            for i in range(1, k):
                cur.next = nex.next
                nex.next = pre.next
                pre.next = nex
                nex = cur.next
            
            pre = cur
            l -= k
        
        return dummy.next
