# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def addTwoNumbers(self, l1: Optional[ListNode], l2: Optional[ListNode]) -> Optional[ListNode]:
        c = 0
        root = None
        prev = None
        while l1 and l2:
            s = l1.val + l2.val + c
            if c != 0:
                c = 0
                
            c = s // 10
            s = s % 10
            
            
            cur = ListNode(s)
            if prev == None:
                root = cur
            else:
                prev.next = cur
                    
            prev = cur
            l1 = l1.next
            l2 = l2.next
            
        while l1:
            s = l1.val + c
            if c != 0:
                c = 0
            
            c = s // 10
            s = s % 10
            
            cur = ListNode(s)
            if prev == None:
                root = cur
            else:
                prev.next = cur
                    
            prev = cur
            l1 = l1.next
            
        while l2:
            s = l2.val + c
            if c != 0:
                c = 0
            
            c = s // 10
            s = s % 10
            
            cur = ListNode(s)
            if prev == None:
                root = cur
            else:
                prev.next = cur
                    
            prev = cur
            l2 = l2.next
            
        if c != 0:
            cur.next = ListNode(c)
        
        return root
        
            
        
