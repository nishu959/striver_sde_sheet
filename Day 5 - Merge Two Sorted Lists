# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def mergeTwoLists(self, list1: Optional[ListNode], list2: Optional[ListNode]) -> Optional[ListNode]:
        if list1 != None and list2==None:
            return list1
        if list2!=None and list1==None:
            return list2
        
        root = None
        while list1!=None and list2!=None:
            if list1.val <= list2.val and root==None:
                root = list1
                node = root
                list1 = list1.next
                
            elif list1.val > list2.val and root==None:
                root = list2
                node = root
                list2 = list2.next
                
            elif list1.val <= list2.val:
                node.next = list1
                node = list1
                list1 = list1.next
                
            elif list1.val > list2.val:
                node.next = list2
                node = list2
                list2 = list2.next
                
            
        while list1 !=None:
            node.next = list1
            node = list1
            list1 = list1.next
            
        while list2 !=None:
            node.next = list2
            node = list2
            list2 = list2.next
            
        return root
            
            
            
            
            

                
            
